// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteV1IncidentsIncidentIDAlertsIncidentAlertIDReader is a Reader for the DeleteV1IncidentsIncidentIDAlertsIncidentAlertID structure.
type DeleteV1IncidentsIncidentIDAlertsIncidentAlertIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteV1IncidentsIncidentIDAlertsIncidentAlertIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteV1IncidentsIncidentIDAlertsIncidentAlertIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteV1IncidentsIncidentIDAlertsIncidentAlertIDNoContent creates a DeleteV1IncidentsIncidentIDAlertsIncidentAlertIDNoContent with default headers values
func NewDeleteV1IncidentsIncidentIDAlertsIncidentAlertIDNoContent() *DeleteV1IncidentsIncidentIDAlertsIncidentAlertIDNoContent {
	return &DeleteV1IncidentsIncidentIDAlertsIncidentAlertIDNoContent{}
}

/*DeleteV1IncidentsIncidentIDAlertsIncidentAlertIDNoContent handles this case with default header values.

Remove an alert from the incident
*/
type DeleteV1IncidentsIncidentIDAlertsIncidentAlertIDNoContent struct {
}

func (o *DeleteV1IncidentsIncidentIDAlertsIncidentAlertIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/incidents/{incident_id}/alerts/{incident_alert_id}][%d] deleteV1IncidentsIncidentIdAlertsIncidentAlertIdNoContent ", 204)
}

func (o *DeleteV1IncidentsIncidentIDAlertsIncidentAlertIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
