// Code generated by go-swagger; DO NOT EDIT.

package events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PatchV1EventsEventIDVotesReader is a Reader for the PatchV1EventsEventIDVotes structure.
type PatchV1EventsEventIDVotesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchV1EventsEventIDVotesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchV1EventsEventIDVotesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchV1EventsEventIDVotesOK creates a PatchV1EventsEventIDVotesOK with default headers values
func NewPatchV1EventsEventIDVotesOK() *PatchV1EventsEventIDVotesOK {
	return &PatchV1EventsEventIDVotesOK{}
}

/* PatchV1EventsEventIDVotesOK describes a response with status code 200, with default header values.

patched Vote
*/
type PatchV1EventsEventIDVotesOK struct {
}

func (o *PatchV1EventsEventIDVotesOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/events/{event_id}/votes][%d] patchV1EventsEventIdVotesOK ", 200)
}

func (o *PatchV1EventsEventIDVotesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
